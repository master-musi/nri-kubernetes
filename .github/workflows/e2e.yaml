name: E2E over minikube

on:
  pull_request:
    branches-ignore:
      - v2
  push:
    branches:
      - main

jobs:
  generate-kubernetes-versions:
    # Do not run e2e tests if commit message or PR has skip-e2e.
    if: ${{ ! contains(github.event.pull_request.labels.*.name, 'ci/skip-e2e') }}
    runs-on: ubuntu-22.04
    env:
      LATEST_SUPPORTED: '1.23'
    outputs:
      latest: ${{ steps.matrix.outputs.latest }}
      previous_1: ${{ steps.matrix.outputs.previous_1 }}
      previous_2: ${{ steps.matrix.outputs.previous_2 }}
      previous_3: ${{ steps.matrix.outputs.previous_3 }}
      previous_4: ${{ steps.matrix.outputs.previous_4 }}
    steps:
      - name: Calculate the previous 5 minors
        id: matrix
        run: |
          echo "::group::Generating kubernetes version matrix"
          # This is a Google Storage bucket, you can check it with
          # gsutil ls gs://kubernetes-release/release
          # "dl.k8s.io" is a URL shortener which source you can find here: https://github.com/kubernetes/k8s.io/blob/main/apps/k8s-io/configmap-nginx.yaml#L174-L186
          VERSION=$(curl -Ls https://dl.k8s.io/release/stable-${LATEST_SUPPORTED}.txt)
          # shellcheck disable=SC2001
          MAJOR=$(sed -e 's_v\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\)_\1_' <<<"$VERSION")
          # shellcheck disable=SC2001
          MINOR=$(sed -e 's_v\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\)_\2_' <<<"$VERSION")

          echo "::set-output name=latest::$(curl -L https://dl.k8s.io/release/stable-${MAJOR}.$(( MINOR )).txt)"
          echo "::set-output name=previous_1::$(curl -L https://dl.k8s.io/release/stable-${MAJOR}.$(( MINOR - 1 )).txt)"
          echo "::set-output name=previous_2::$(curl -L https://dl.k8s.io/release/stable-${MAJOR}.$(( MINOR - 2 )).txt)"
          echo "::set-output name=previous_3::$(curl -L https://dl.k8s.io/release/stable-${MAJOR}.$(( MINOR - 3 )).txt)"
          echo "::set-output name=previous_4::$(curl -L https://dl.k8s.io/release/stable-${MAJOR}.$(( MINOR - 4 )).txt)"

  e2e-tests:
    # Do not run e2e tests if commit message or PR has skip-e2e.
    if: ${{ ! contains(github.event.pull_request.labels.*.name, 'ci/skip-e2e') }}
    runs-on: ubuntu-20.04
    needs:
      - generate-kubernetes-versions
    strategy:
      max-parallel: 3 # len(k8sVersion)/2 is a good number to have here
      matrix:
        # Latest patch version can be found in https://github.com/kubernetes/website/blob/main/content/en/releases/patch-releases.md
        # Some versions might not be available yet in https://storage.googleapis.com/kubernetes-release/release/v1.X.Y/bin/linux/amd64/kubelet
        k8sVersion:
          - ${{ needs.generate-kubernetes-versions.outputs.latest }}
          - ${{ needs.generate-kubernetes-versions.outputs.previous_1 }}
          - ${{ needs.generate-kubernetes-versions.outputs.previous_2 }}
          - ${{ needs.generate-kubernetes-versions.outputs.previous_3 }}
          - ${{ needs.generate-kubernetes-versions.outputs.previous_4 }}
        cri:
          - containerd
      # include:  # CRI-O does not export any metric yet.
      #   - k8sVersion: v1.22.3
      #     cri: crio
      #   - k8sVersion: v1.21.4
      #     cri: crio
    env:
      DOCKER_BUILDKIT: '1' # Setting DOCKER_BUILDKIT=1 ensures TARGETOS and TARGETARCH are populated
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.6.0
        with:
          minikube version: v1.25.2
          kubernetes version: ${{ matrix.k8sVersion }}
          driver: docker
          container runtime: ${{ matrix.cri }}
          start args: "--nodes=2"
      - name: Enable addons minikube needed for HPA
        run: |
          minikube addons enable metrics-server
      - name: Compile, Build and load Images
        run: |
          GOOS=linux GOARCH=amd64 make compile # Set GOOS and GOARCH explicitly since Dockerfile expects them in the binary name
          docker build -t e2e/nri-kubernetes:e2e  .
          minikube image load e2e/nri-kubernetes:e2e
      - name: Setup Helm
        run: |
          chmod go-r /home/runner/.kube/config
          helm repo add newrelic https://helm-charts.newrelic.com
          helm repo add kube-state-metrics https://kubernetes.github.io/kube-state-metrics
          helm repo update
      - name: Run e2e-test
        uses: newrelic/newrelic-integration-e2e-action@v1
        with:
          retry_seconds: 60
          retry_attempts: 5
          agent_enabled: false
          spec_path: e2e/test-specs.yml
          account_id: ${{ secrets.COREINT_E2E_ACCOUNT_ID }}
          api_key: ${{ secrets.COREINT_E2E_API_KEY }}
          license_key: ${{ secrets.COREINT_E2E_LICENSE_KEY }}
