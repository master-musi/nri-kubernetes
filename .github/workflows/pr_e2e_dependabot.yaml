name: Push/PR pipeline Dependabot
on:
  pull_request_target:

jobs:
  chart-lint:
    name: Helm chart Lint
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    timeout-minutes: 10
    strategy:
      matrix:
        kubernetes-version: [ "v1.16.15", "v1.22.0" ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: helm/chart-testing-action@v2.2.1

      - name: Lint charts
        run: ct --config .github/ct.yaml lint --debug

      - name: Check for changed installable charts
        id: list-changed
        run: |
          changed=$(ct --config .github/ct.yaml list-changed)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Run helm unit tests
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm plugin install https://github.com/quintush/helm-unittest

          for chart in $(ct --config .github/ct.yaml list-changed); do
            if [ -d "$chart/tests/" ]; then
              helm unittest -3 $chart
            else
              echo "No unit tests found for $chart"
            fi
          done
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.4.3
        if: steps.list-changed.outputs.changed == 'true'
        with:
          minikube version: v1.20.0
          kubernetes version: ${{ matrix.kubernetes-version }}
          github token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-go@v2
        if: steps.list-changed.outputs.changed == 'true'
        with:
          go-version: '1.17'
      - name: Create image for chart testing
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          GOOS=linux GOARCH=amd64 make compile
          DOCKER_BUILDKIT=1 docker build -t e2e/nri-kubernetes:test  .
          minikube image load e2e/nri-kubernetes:test
          kubectl create ns ct
      - name: Test install charts
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --namespace ct --config .github/ct.yaml --debug
      - name: Test upgrade charts
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --namespace ct --config .github/ct.yaml --debug --upgrade


  e2eTests:
    if: ${{ github.actor == 'dependabot[bot]'}}
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 5 # len(k8sVersion)/2 is a good number to have here
      matrix:
        # Latest patch version can be found in https://github.com/kubernetes/website/blob/main/content/en/releases/patch-releases.md
        # Some versions might not be available yet in https://storage.googleapis.com/kubernetes-release/release/v1.X.Y/bin/linux/amd64/kubelet
        k8sVersion: [ "v1.22.3", "v1.21.4", "v1.20.10", "v1.19.14", "v1.18.20", "v1.17.17", "v1.16.15" ]
        cri: [ docker ]
        include:
          - k8sVersion: v1.22.3
            cri: containerd
          - k8sVersion: v1.21.4
            cri: containerd
    env:
      DOCKER_BUILDKIT: '1' # Setting DOCKER_BUILDKIT=1 ensures TARGETOS and TARGETARCH are populated
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.4.3
        with:
          minikube version: v1.23.2
          kubernetes version: ${{ matrix.k8sVersion }}
          driver: docker
          start args: "--nodes=2 --container-runtime=${{ matrix.cri }}"
      - name: Enable addons minikube needed for HPA
        run: |
          minikube addons enable metrics-server
      - name: Compile, Build and load Images
        run: |
          GOOS=linux GOARCH=amd64 make compile # Set GOOS and GOARCH explicitly since Dockerfile expects them in the binary name
          docker build -t e2e/nri-kubernetes:e2e  .
          minikube image load e2e/nri-kubernetes:e2e
      - name: Setup Helm
        run: |
          chmod go-r /home/runner/.kube/config
          helm repo add newrelic https://helm-charts.newrelic.com
          helm repo add kube-state-metrics https://kubernetes.github.io/kube-state-metrics
          helm repo update
      - name: Run e2e-test
        uses: newrelic/newrelic-integration-e2e-action@v1
        with:
          retry_seconds: 60
          retry_attempts: 5
          agent_enabled: false
          spec_path: e2e/test-specs.yml
          account_id: ${{ secrets.COREINT_E2E_ACCOUNT_ID }}
          api_key: ${{ secrets.COREINT_E2E_API_KEY }}
          license_key: ${{ secrets.COREINT_E2E_LICENSE_KEY }}
